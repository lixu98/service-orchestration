"use strict";(self.webpackChunkassc_crs=self.webpackChunkassc_crs||[]).push([[9832],{87646:function(e,t,a){a.r(t),a.d(t,{CalendarView:function(){return h},DwPlanCalendarColorService:function(){return m},DwPlanCalendarCoreModule:function(){return g},DwPlanCalendarEventManageService:function(){return f},DwPlanCalendarEventRepository:function(){return b},DwPlanCalendarManageService:function(){return C},DwPlanCalendarModalService:function(){return D},DwPlanCalendarPermissionService:function(){return S},DwPlanCalendarRepository:function(){return w},DwPlanCalendarService:function(){return y}});var r=a(42746),n=a(78167),s=a(30469),i=a(71049),l=a(47372),c=a(83522),d=a(55245),o=a(32698),u=a.n(o),p=a(52575),v=a(1020),h=(()=>{return(e=h||(h={})).GridMonth="dayGridMonth",e.GridWeek="timeGridWeek",e.GridDay="timeGridDay",e.ListMonth="listMonth",e.ListWeek="listWeek",e.ListDay="listDay",h;var e})();let w=(()=>{class e{constructor(e,t){this.http=e,this.dwAppId=t}calendarsCreate(e){return this.http.post("api/cmc/v2/calendars/create",e)}calendarsUpdate(e){return this.http.post("api/cmc/v2/calendars/update",e)}calendarsDelete(e){return this.http.post("api/cmc/v2/calendars/remove",e)}calendarsSubscriptionList(e=[]){const t={appIds:[]};return 0===e.length?t.appIds.push(this.dwAppId):t.appIds=JSON.parse(JSON.stringify(e)),this.http.post("api/cmc/v2/calendars/subscription/list",t)}calendarsSubscribe(e){return this.http.post("api/cmc/v2/calendars/subscribe",e)}calendarsUnSubscribe(e){return this.http.post("api/cmc/v2/calendars/unsubscribe",e)}getCalendarList(e=[]){const t={appIds:[]};return 0===e.length?t.appIds.push(this.dwAppId):t.appIds=JSON.parse(JSON.stringify(e)),this.http.post("api/cmc/v2/calendars/currentuser",t)}calendarsHoliday(e){return this.http.post("api/cmc/v2/calendars/holiday",e)}calendarSelected(e){return this.http.post("api/cmc/v2/calendars/visible",e)}calendarDetail(e){return this.http.post("api/cmc/v2/calendars/detail",e)}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(n.DwCmcHttpClient),r.\u0275\u0275inject(s.DW_APP_ID))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),b=(()=>{class e{constructor(e){this.http=e}eventsCreate(e){return this.http.post("api/cmc/v2/events/create",e)}eventsDetail(e){return this.http.post("api/cmc/v2/events/detail",e)}eventsUpdate(e){return this.http.post("api/cmc/v2/events/update",e)}eventsDelete(e){return this.http.post("api/cmc/v2/events/delete",e)}events(e){return this.http.post("api/cmc/v2/events",e).pipe((0,l.catchError)((e,t)=>i.Observable.create(e=>{e.next([]),e.complete()})))}eventsUpdateStatus(e){return this.http.post("api/cmc/v2/events/update/status",e)}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(n.DwCmcHttpClient))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),m=(()=>{class e{constructor(){}default(){return"#039BE5"}colorList(){return["#AD1457","#D81B60","#D50000","#E67C73","#F4511E","#EF6C00","#F09300","#FFCC00","#E4C441","#C0CA33","#7DB342","#33B679","#0B8043","#009688","#039BE5","#4285F4","#3F51B5","#7986CB","#9E69AF","#8E24AA"]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),S=(()=>{class e{constructor(e){this.translateService=e}attendeePermissionList(){return[{key:"EDIT",hasPermission:!1,titleKey:this.translateService.instant("dw-plan-calendar-modify-schedule")},{key:"INVITE",hasPermission:!1,titleKey:this.translateService.instant("dw-plan-calendar-invite-participants")},{key:"VIEW",hasPermission:!1,titleKey:this.translateService.instant("dw-plan-calendar-view-participants-list")}]}permission(e,t){const a={modifyDetail:!1,delete:!1,unsubscribe:!1};return"MANAGE"===e?(a.modifyDetail=!0,t||(a.delete=!0)):a.unsubscribe=!0,a}eventPermission(e,t,a){const r={readDetail:!1,readAttendee:!1,modifyDetail:!1,modifyAttendee:!1,add:!1,delete:!1};switch(e){case"MANAGE":case"EDIT":r.readDetail=!0,r.readAttendee=!0,r.modifyDetail=!0,r.modifyAttendee=!0,r.add=!0,r.delete=!0;break;case"READ_DETAIL":r.readDetail=!0,r.readAttendee=!0}return"CONFIRMED"===a?(r.readDetail=!0,t.forEach(e=>{switch(e){case"EDIT":r.readDetail=!0,r.readAttendee=!0,r.modifyDetail=!0,r.modifyAttendee=!0;break;case"INVITE":r.readDetail=!0,r.readAttendee=!0,r.modifyAttendee=!0;break;case"VIEW":r.readDetail=!0}})):"TENTATIVE"===a&&(r.readDetail=!0),r}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(c.TranslateService))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),C=(()=>{class e{constructor(e,t){this.dwPlanCalendarRepository=e,this.dwPlanCalendarPermissionService=t}add(e){return this.dwPlanCalendarRepository.calendarsCreate(e)}update(e){return this.dwPlanCalendarRepository.calendarsUpdate(e)}delete(e=[]){return this.dwPlanCalendarRepository.calendarsDelete({calendarSids:e})}getSubscriptionList(e=[]){return this.dwPlanCalendarRepository.calendarsSubscriptionList(e)}calendarsSubscribe(e=[]){return this.dwPlanCalendarRepository.calendarsSubscribe({calendarSids:e})}calendarsUnSubscribe(e=[]){return this.dwPlanCalendarRepository.calendarsUnSubscribe({calendarSids:e})}getCalendarList(e=[]){return this.dwPlanCalendarRepository.getCalendarList(e).pipe((0,l.map)(e=>(e.forEach(e=>{const t=this.dwPlanCalendarPermissionService.permission(e.attendeePermission,e.defaultCal);e.modifyDetail=t.modifyDetail,e.delete=t.delete,e.unsubscribe=t.unsubscribe}),e)))}calendarSelected(e,t){return this.dwPlanCalendarRepository.calendarSelected([{sid:e,visible:t}])}calendarDetail(e){return this.dwPlanCalendarRepository.calendarDetail({sid:e})}getBelongCalenars(){return i.Observable.create(e=>{this.getCalendarList().subscribe(t=>{const a=(t||[]).filter(e=>"MANAGE"===e.attendeePermission||"EDIT"===e.attendeePermission);e.next(a),e.complete()},t=>{e.next([]),e.complete()})})}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(w),r.\u0275\u0275inject(S))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),f=(()=>{class e{constructor(e,t){this.dwPlanCalendarEventRepository=e,this.translateService=t}add(e){return this.dwPlanCalendarEventRepository.eventsCreate(e)}eventsDetail(e){return this.dwPlanCalendarEventRepository.eventsDetail(e)}update(e){return this.dwPlanCalendarEventRepository.eventsUpdate(e)}delete(e){return this.dwPlanCalendarEventRepository.eventsDelete(e)}events(e,t,a){const r={calendarSids:a,startTime:u()(e,"yyyy-MM-dd HH:mm:ss"),endTime:u()(t,"yyyy-MM-dd HH:mm:ss")};return this.dwPlanCalendarEventRepository.events(r).pipe((0,l.map)(e=>{const t=[];return e.forEach(e=>{e.events.forEach(a=>{let r=a.summary;r||(r=this.translateService.instant("dw-plan-calendar-view-busy"));const n={calendarSid:e.calendarSid,title:r,start:a.startDatetime,end:a.endDatetime,allDay:a.allDay,classNames:a.eventStatus?[a.eventStatus.toLowerCase()]:[],extendedProps:Object.assign({},a)};"TENTATIVE"!==a.eventStatus&&(n.color=a.color),new Date(a.startDatetime),new Date(a.endDatetime),n.end.endsWith("23:59:59")&&(n.end=new Date(new Date(a.endDatetime).setSeconds(60))),n.allDay||delete n.color,t.push(n)})}),t}))}eventsUpdateStatus(e,t){return this.dwPlanCalendarEventRepository.eventsUpdateStatus({eventSid:e,status:t})}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(b),r.\u0275\u0275inject(c.TranslateService))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),y=(()=>{class e{constructor(e,t,a){this.datePipe=e,this.planCalendarManageService=t,this.planCalendarEventManageService=a,this.calendars=new i.Subject,this.visibleRangeSubject$=new i.BehaviorSubject(null),this.calendarList=[],this.calendarListSubject$=new i.BehaviorSubject([]),this.eventsSubject$=new i.BehaviorSubject([]),this.viewChange$=new i.BehaviorSubject(h.GridMonth),this.todayEventEmitter=new r.EventEmitter,this.nextEventEmitter=new r.EventEmitter,this.previousEventEmitter=new r.EventEmitter}dateTimeToString(e){return this.datePipe.transform(e,"yyyy-MM-dd HH:mm:ss")}allDayTime(e,t,a){const r={startDatetime:new Date(t),endDatetime:new Date(a)};return e&&(r.startDatetime=new Date(this.datePipe.transform(t,"yyyy-MM-dd")+" 00:00:00"),r.endDatetime=new Date(this.datePipe.transform(a,"yyyy-MM-dd")+" 23:59:59")),r}setVisibleRange(e){this.visibleRange=e,this.visibleRangeSubject$.next(this.visibleRange),this.viewChange()}getVisibleRange(){return this.visibleRangeSubject$.asObservable().pipe((0,l.filter)(e=>null!==e),(0,l.distinctUntilChanged)())}resetViewCalendarList(){this.planCalendarManageService.getCalendarList().subscribe(e=>{this.setViewCalendarList(e)})}setViewCalendarList(e){this.calendarList=JSON.parse(JSON.stringify(e)),this.calendarListSubject$.next(this.calendarList),this.viewChange()}getViewCalendarList(){return this.calendarListSubject$.asObservable().pipe((0,l.filter)(e=>null!==e),(0,l.distinctUntilChanged)())}calendarVisible(e,t){if(e){const a=JSON.parse(JSON.stringify(this.calendarList)),r=a.length;for(let n=0;n<r;n++)if(a[n].sid===e){t&&a[n].visible!==t&&(a[n].visible=t);break}this.planCalendarManageService.calendarSelected(e,t).subscribe(e=>{this.setViewCalendarList(a)})}}viewChange(){const e=[];this.visibleRange?(this.calendarList.forEach(t=>{t.visible&&e.push(t.sid)}),this.planCalendarEventManageService.events(this.visibleRange.activeStart,this.visibleRange.activeEnd,e).subscribe(e=>{this.eventsSubject$.next(e)})):this.eventsSubject$.next([])}getViewEvents(){return this.eventsSubject$.asObservable().pipe((0,l.distinctUntilChanged)())}changeView(e){this.viewChange$.next(e)}today(){this.todayEventEmitter.emit()}next(){this.nextEventEmitter.emit()}previous(){this.previousEventEmitter.emit()}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(d.DatePipe),r.\u0275\u0275inject(C),r.\u0275\u0275inject(f))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),D=(()=>{class e{constructor(e,t,a,r,n){this.dwPlanCalendarService=e,this.planCalendarManageService=t,this.dwPlanCalendarEventManageService=a,this.translateService=r,this.dwMessageService=n}calendarAddOnOk(e){return i.Observable.create(t=>{this.dwPlanCalendarService.resetViewCalendarList(),t.next(e),t.complete()})}calendarModifyOnOk(e){return i.Observable.create(t=>{this.dwPlanCalendarService.resetViewCalendarList(),t.next(e),t.complete()})}calendarDelete(e){return i.Observable.create(t=>{this.dwMessageService.confirm({dwTitle:this.translateService.instant("dw-msg-confirm-delete",{value1:e.name}),dwContent:this.translateService.instant("dw-plan-calendar-remove-tips",{calendarName:e.name})}).subscribe(a=>{a?this.planCalendarManageService.delete([e.sid]).subscribe(e=>{this.dwPlanCalendarService.resetViewCalendarList(),t.next("ok"),t.complete()},a=>{if(a.error.hasOwnProperty("dwHttpErrorResponse")){let r="";a.error.message?r=a.error.message:a.error.dwHttpErrorResponse.errorStatusMessage&&(r=a.error.dwHttpErrorResponse.errorStatusMessage),this.dwMessageService.error(null,{dwTitle:e.name,dwContent:r}).subscribe(e=>{t.next({error:a}),t.complete()})}else t.next({error:a}),t.complete()}):(t.next("cancel"),t.complete())})})}calendarSubscribeOnOk(e){return i.Observable.create(t=>{this.dwPlanCalendarService.resetViewCalendarList(),t.next(e),t.complete()})}calendarUnsubscribe(e){return i.Observable.create(t=>{this.dwMessageService.confirm({dwTitle:this.translateService.instant("dw-plan-calendar-msg-confirm-unsubscribe"),dwContent:this.translateService.instant("dw-plan-calendar-unsubscribe-tips",{calendarName:e.name})}).subscribe(a=>{a?this.planCalendarManageService.calendarsUnSubscribe([e.sid]).subscribe(e=>{this.dwPlanCalendarService.resetViewCalendarList(),t.next("ok"),t.complete()},a=>{if(a.error.hasOwnProperty("dwHttpErrorResponse")){let r="";a.error.message?r=a.error.message:a.error.dwHttpErrorResponse.errorStatusMessage&&(r=a.error.dwHttpErrorResponse.errorStatusMessage),this.dwMessageService.error(null,{dwTitle:e.name,dwContent:r}).subscribe(e=>{t.next({error:a}),t.complete()})}else t.next({error:a}),t.complete()}):(t.next("cancel"),t.complete())})})}calendarEventAddOnOk(e){return i.Observable.create(t=>{let a={calendarSid:null,isUpdate:!1};e.hasOwnProperty("returnData")&&(a=Object.assign({},e.returnData),a.calendarSid?this.dwPlanCalendarService.calendarVisible(a.calendarSid,!0):this.dwPlanCalendarService.viewChange()),e.returnData=a,t.next(e),t.complete()})}calendarEventEditOnOk(e){return i.Observable.create(t=>{let a={calendarSid:null,isUpdate:!1};e.hasOwnProperty("returnData")&&(a=Object.assign({},e.returnData),a.calendarSid?this.dwPlanCalendarService.calendarVisible(a.calendarSid,!0):this.dwPlanCalendarService.viewChange()),e.returnData=a,t.next(e),t.complete()})}calendarEventDetailOnOk(e,t){if(e.hasOwnProperty("returnData")){const a=Object.assign({},e.returnData);a.calendarSid&&a.calendarSid!==t.calendarSid?this.dwPlanCalendarService.calendarVisible(a.calendarSid,!0):this.dwPlanCalendarService.viewChange()}}calendarEventDelete(e,t){return i.Observable.create(a=>{this.dwMessageService.confirm({dwTitle:this.translateService.instant("dw-msg-confirm-delete",{value1:t}),dwContent:""}).subscribe(r=>{r?this.dwPlanCalendarEventManageService.delete({eventSid:e}).subscribe(e=>{a.next("ok"),a.complete()},e=>{if(e.error.hasOwnProperty("dwHttpErrorResponse")){let r="";e.error.message?r=e.error.message:e.error.dwHttpErrorResponse.errorStatusMessage&&(r=e.error.dwHttpErrorResponse.errorStatusMessage),this.dwMessageService.error(null,{dwTitle:t,dwContent:r}).subscribe(t=>{a.next({error:e}),a.complete()})}else a.next({error:e}),a.complete()}):(a.next("cancel"),a.complete())})})}}return e.\u0275fac=function(t){return new(t||e)(r.\u0275\u0275inject(y),r.\u0275\u0275inject(C),r.\u0275\u0275inject(f),r.\u0275\u0275inject(c.TranslateService),r.\u0275\u0275inject(p.DwHttpMessageService))},e.\u0275prov=r.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),g=(()=>{class e{static forChild(){return{ngModule:e,providers:[m,y,D,w,b,S,C,f]}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=r.\u0275\u0275defineInjector({providers:[],imports:[[d.CommonModule,v.FormsModule,v.ReactiveFormsModule,c.TranslateModule]]}),e})()}}]);