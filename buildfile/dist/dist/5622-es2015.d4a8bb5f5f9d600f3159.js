"use strict";(self.webpackChunkassc_crs=self.webpackChunkassc_crs||[]).push([[5622,8545],{75622:function(e,t,i){i.r(t),i.d(t,{DwIamAuthService:function(){return m},DwIamHttpClient:function(){return f},DwIamHttpErrorHandler:function(){return g},DwIamModule:function(){return j},DwIamRepository:function(){return S},DwIamTenantService:function(){return y},DwIamUserService:function(){return b},DwSsoService:function(){return D},DwSsoTokenRefreshService:function(){return T},SsoUtility:function(){return k}});var n=i(42746),r=i(87974),s=i(71049),o=i(47372),a=i(83522),c=i(47483),p=i(52575),u=i(30469),h=i(32276),d=i(32245),l=i(66800),w=i(12146),v=i(55245);let g=(()=>{class e{constructor(e){this.dwHttpErrorHandlerService=e}handlerError(e){this.dwHttpErrorHandlerService.handle(e)}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(p.DwHttpErrorHandlerService))},e.\u0275prov=n.\u0275\u0275defineInjectable({factory:function(){return new e(n.\u0275\u0275inject(p.DwHttpErrorHandlerService))},token:e,providedIn:p.DwHttpModule}),e})(),f=(()=>{class e extends p.DwHttpClient{constructor(e,t,i,n,r,s,o){super(e,o),this.dwHttpRequestUrlService=e,this.configService=t,this.authToken=i,this.iamHttpError=n,this.dwAppAuthToken=r,this.dwLanguageService=s,this.dwHttpLoadMaskService=o,this.getApiUrl().subscribe(e=>{this.api=e})}getApiUrl(){return this.configService.get("iamUrl")}get defaultHeaders(){const e={"digi-middleware-auth-app":this.dwAppAuthToken,"digi-middleware-auth-user":this.authToken.token?this.authToken.token:"","Client-Agent":"webplatform/"+u.DW_SYSTEM_CONFIG.dwVersion};let t=this.dwLanguageService.currentLanguage;return t&&(t=t.replace("_","-"),e["Accept-Language"]=t),e}errorHandler(e){this.iamHttpError.handlerError(e)}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(p.DwHttpRequestUrlService),n.\u0275\u0275inject(u.DwSystemConfigService),n.\u0275\u0275inject(h.DW_AUTH_TOKEN),n.\u0275\u0275inject(g,2),n.\u0275\u0275inject(u.DW_APP_AUTH_TOKEN),n.\u0275\u0275inject(d.DwLanguageService),n.\u0275\u0275inject(p.DwHttpLoadMaskService))},e.\u0275prov=n.\u0275\u0275defineInjectable({factory:function(){return new e(n.\u0275\u0275inject(p.DwHttpRequestUrlService),n.\u0275\u0275inject(u.DwSystemConfigService),n.\u0275\u0275inject(h.DW_AUTH_TOKEN),n.\u0275\u0275inject(g,2),n.\u0275\u0275inject(u.DW_APP_AUTH_TOKEN),n.\u0275\u0275inject(d.DwLanguageService),n.\u0275\u0275inject(p.DwHttpLoadMaskService))},token:e,providedIn:p.DwHttpModule}),e})(),S=(()=>{class e{constructor(e,t,i){this.http=e,this.dwAppId=t,this.dwHttpClientOptionsService=i}login(e){return this.http.post("api/iam/v2/identity/login",e)}internalLogin(e){return this.http.post("api/iam/v2/identity/internal/login",e)}logout(){return this.http.post("api/iam/v2/identity/logout",{})}getTenantList(){return this.dwAppId?this.http.post(`api/iam/v2/tenant?appId=${this.dwAppId}`,{}).pipe((0,o.map)(e=>e.map(e=>Object.assign(e,{tenantSid:e.sid,tenantId:e.id,tenantName:e.name})))):s.Observable.create(e=>{e.next([]),e.complete(),console.log("tenants error")})}getUserInfo(e){return this.http.post("api/iam/v2/user/withtenant",e?{id:e}:{}).pipe((0,o.map)(e=>Object.assign(e,{userId:e.id,userName:e.name})))}analyzeToken(){return this.http.post("api/iam/v2/identity/token/analyze",{}).pipe((0,o.map)(e=>Object.assign(e,{userId:e.id,userName:e.name})))}tokenRefreshApp(){return this.http.post("api/iam/v2/identity/token/refresh/app",{})}tokenRefreshTenant(e){return this.http.post("api/iam/v2/identity/token/refresh/tenant",{tenantSid:e}).pipe((0,o.map)(e=>Object.assign(e,{token:e.user_token})))}updatePassword(e){return this.http.post("api/iam/v2/user/password/update",{account:e.account,password:e.password,verificationCode:e.verificationCode})}verifyEmailExist(e){const t=this.dwHttpClientOptionsService.setLoadMaskCfg({},!1);return this.http.post("api/iam/v2/user/email/exist",e,t)}verifyMobilephoneExist(e){const t=this.dwHttpClientOptionsService.setLoadMaskCfg({},!1);return this.http.post("api/iam/v2/user/mobilephone/exist",e,t)}getUserSalt(e){return this.http.post("api/iam/v2/user/salt",{id:e})}permissionUserActions(){return this.http.post("api/iam/v2/permission/user/actions",{id:this.dwAppId})}userPasswordUpdate(e){return this.http.post("api/iam/v2/user/password/update",e)}userPasswordUpdateForce(e){return this.http.post("api/iam/v2/user/update/password/force",e)}userUpdatePasswordWithOldPassword(e){return this.http.post("api/iam/v2/user/update/password",e)}getUserBasicInfo(e){return this.http.post("api/iam/v2/user",{id:e})}updateUserBasicInfo(e){return this.http.post("api/iam/v2/user/update",e)}updateUserHeadimageUrl(e,t){return this.http.post("api/iam/v2/user/update/headimageurl",{sid:t,headImageUrl:e})}getIdentityPublickey(){return this.http.get("api/iam/v2/identity/publickey")}getIdentityAeskey(e){return this.http.post("api/iam/v2/identity/aeskey",{clientEncryptPublicKey:e})}agreeagreementUpdate(e,t){let i=this.http.newHttpHeaders();return i=i.set("digi-middleware-auth-user",e),this.http.post("api/iam/v2/user/agreeagreement/update",{agreeAgreement:t},{headers:i})}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(f),n.\u0275\u0275inject(u.DW_APP_ID),n.\u0275\u0275inject(p.DwHttpClientOptionsService))},e.\u0275prov=n.\u0275\u0275defineInjectable({factory:function(){return new e(n.\u0275\u0275inject(f),n.\u0275\u0275inject(u.DW_APP_ID),n.\u0275\u0275inject(p.DwHttpClientOptionsService))},token:e,providedIn:p.DwHttpModule}),e})(),m=(()=>{class e extends h.DwAuthService{constructor(e,t,i,n,r,s,o,a,c,p){super(e,t,s,o,a),this.router=e,this.userService=t,this.iamRepository=i,this.configService=n,this.translateService=r,this.authToken=s,this.defaultLogin=o,this.dwTenantService=a,this.dwDeclarationService=c,this.dwChangePasswordInfoService=p,this.configService.get("multiTenant").subscribe(e=>{this.isServiceCloud=e,this.dwMultiTenant=e}),this.dwTenantService.isTokenValid$.subscribe(e=>{!1===e&&this.iamLogout()}),this.dwTenantService.tenantInfoRefresh$.subscribe(e=>{this.setLogined(e)}),this.isLoggedIn$.subscribe(e=>{!1===e&&(this.dwTenantService.setTenantList([]),this.dwTenantService.setTokenValid(!1))})}login(e){const t={success:!0,description:""};return new s.Observable(i=>{this.getLoginApiBody(e).pipe((0,o.concatMap)(t=>e.loginType===w.DwLoginTypeEnum.INTERNAL?this.iamRepository.internalLogin(t):this.iamRepository.login(t)),(0,o.switchMap)(e=>this.shouldAgreeDeclaration(e))).subscribe(e=>{if(!this.dwMultiTenant)return this.setLogined(e),this.dwTenantService.setTokenValid(!0),i.next(t),void i.complete();this.setAuthToken(e),this.shouldChangeDefaultPassword().pipe((0,o.switchMap)(e=>{if(!1===e)return this.dwTenantService.getTenants();this.logout(!1),location.reload()})).subscribe(e=>{if(0===e.length)return t.description=this.translateService.instant("dw-login-failure-noTenant"),i.next(this.setLoginFail(t)),void i.complete();1!==e.length?(t.success=null,i.next(t),i.complete()):this.dwTenantService.tokenRefreshTenant(e[0].tenantSid).subscribe(e=>{i.next(t),i.complete()},e=>{i.error(e),i.complete()})},e=>{i.error(e),i.complete()})},e=>{i.error(e),i.complete()})})}shouldAgreeDeclaration(e){return e.hasOwnProperty("agreeAgreement")&&!1===e.agreeAgreement?new s.Observable(t=>{this.dwDeclarationService.shouldAgree(e).subscribe(i=>{!0===i?(t.next(e),t.complete()):(t.error({error:{errorMessage:this.translateService.instant("dw-declaration-not-active-info")}}),t.complete())})}):(0,s.of)(e)}shouldChangeDefaultPassword(){return new s.Observable(e=>{!1===this.userService.getUser("changed")?this.dwChangePasswordInfoService.shouldChanedPassword().subscribe(t=>{e.next(!0),e.complete()}):(e.next(!1),e.complete())})}setLoginFail(e){return e.success=!1,e.description=e.description?e.description:this.translateService.instant("dw-login-failure"),e}getLoginApiBody(e){return(0,s.forkJoin)([this.getUserSalt(e),this.getClientEncrypt(e)]).pipe((0,o.map)(t=>{const i={tenantId:e.tenantId,userId:e.userId,identityType:e.identityType};return Object.assign(i,{passwordHash:t[1].passwordHash,clientEncryptPublicKey:t[1].clientEncryptPublicKey}),t[0].salt&&Object.assign(i,{passwordHash1:c.MD5(e.password+t[0].salt).toString()}),i}))}getUserSalt(e){return this.isServiceCloud?this.iamRepository.getUserSalt(e.userId):(0,s.of)({})}getClientEncrypt(e){return this.getAESKey().pipe((0,o.map)(t=>{const i=c.enc.Utf8.parse(t.aeskey),n=c.enc.Utf8.parse("ghUb#er57HBh(u%g");return{passwordHash:c.AES.encrypt(e.password,i,{iv:n,mode:c.mode.CBC,padding:c.pad.Pkcs7}).toString(),clientEncryptPublicKey:t.clientEncryptPublicKey}}))}getAESKey(){return this.iamRepository.getIdentityPublickey().pipe((0,o.switchMap)(e=>{const t=new JSEncrypt({default_key_size:1024});let i=t.getPublicKey();i=i.replace("-----BEGIN PUBLIC KEY-----\n",""),i=i.replace("\n-----END PUBLIC KEY-----","");const n=new JSEncrypt({default_key_size:2048});n.setPublicKey(e.publicKey);const r=n.encrypt(i);return this.iamRepository.getIdentityAeskey(r).pipe((0,o.map)(e=>({aeskey:t.decrypt(e.encryptAesKey),clientEncryptPublicKey:r})))}))}iamLogout(){!this.authToken.token||this.iamRepository.logout().subscribe()}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(r.Router),n.\u0275\u0275inject(l.DwUserService),n.\u0275\u0275inject(S),n.\u0275\u0275inject(u.DwSystemConfigService),n.\u0275\u0275inject(a.TranslateService),n.\u0275\u0275inject(h.DW_AUTH_TOKEN),n.\u0275\u0275inject(u.LONIG_DEFAULT),n.\u0275\u0275inject(l.DwTenantService),n.\u0275\u0275inject(w.DwDeclarationService),n.\u0275\u0275inject(w.DwChangePasswordInfoService))},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),y=(()=>{class e extends l.DwTenantService{constructor(e,t,i){super(e),this.userService=e,this.iamRepository=t,this.authToken=i,this._authService=null,this.tokenValidSubject=new s.BehaviorSubject(this.tokenValid),this.tenantSubject=new s.BehaviorSubject(this.currTenantList)}getTenants(){return this.iamRepository.getTenantList().pipe((0,o.tap)(e=>{this.setTenantList(e)}))}tokenRefreshTenant(e){return this.iamRepository.tokenRefreshTenant(e).pipe((0,o.tap)(e=>{this.authToken.token!==e.token&&this.setTokenValid(!1),this.tenantInfoRefresh$.next(e),this.setTokenValid(!0)}))}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(l.DwUserService),n.\u0275\u0275inject(S),n.\u0275\u0275inject(h.DW_AUTH_TOKEN))},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),b=(()=>{class e extends l.DwUserService{constructor(e,t){super(e),this.userStorage=e,this.iamRepository=t}read(e){return new s.Observable(t=>{this.iamRepository.getUserInfo(e).subscribe(e=>{this.setUserInfo(e),t.next({success:!0,description:"",userInfo:e}),t.complete()},e=>{t.error(e),t.complete()})})}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(l.DwUserStorage),n.\u0275\u0275inject(S))},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),T=(()=>{class e{constructor(e,t){this.iamRepository=e,this.dwAppType=t}tokenRefreshApp(e){return"SharedApp"===this.dwAppType?s.Observable.create(t=>{t.next({user_token:e}),t.complete()}):this.iamRepository.tokenRefreshApp()}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(S),n.\u0275\u0275inject(u.DW_APP_TYPE))},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();class k{static getSsoUrl(e,t,i){const n=e.split("?");"/"!==n[0].substr(-1)&&(n[0]+="/");const r=new URL(e),s=k.getJsonFromUrl(r);i||(i={});const o=Object.assign({},{userToken:t},s,i),a=Object.keys(o).map(e=>encodeURIComponent(e)+"="+encodeURIComponent(o[e])).join("&");return n[0]+"sso-login?"+a}static getJsonFromUrl(e){const t=e.search.substr(1),i={};return t&&t.split("&").forEach(e=>{const t=e.split("=");i[t[0]]=decodeURIComponent(t[1])}),i}}let D=(()=>{class e{constructor(e,t,i,n,r,s,o){this.dwSsoTokenRefreshService=e,this.userService=t,this.authService=i,this.configService=n,this.dwTenantService=r,this.iamRepository=s,this.dwChangePasswordInfoService=o,this.configService.get("multiTenant").subscribe(e=>this.dwMultiTenant=e)}redirectUrl(e,t,i){const n=k.getSsoUrl(e,this.userService.getUser("token"),i);!0===t?window.open(n):document.location.href=n}ssoLogin(e){return new s.Observable(t=>{let i=e.get("userToken")||"";i?(this.authService.setAuthToken({token:i}),this.dwSsoTokenRefreshService.tokenRefreshApp(i).pipe((0,o.switchMap)(e=>(i=e.user_token,this.authService.setAuthToken({token:i}),this.iamRepository.getUserInfo()))).subscribe(e=>{e.hasOwnProperty("userType")||(e.userType=e.type),this.authService.setAuthToken(e),this.shouldChangeDefaultPassword().subscribe(i=>{this.authService.setLogined(e),this.dwTenantService.setTokenValid(!0),this.dwMultiTenant&&this.dwTenantService.getTenants().subscribe(),t.next(!0),t.complete()})},e=>{t.error(e),t.complete()})):(t.next(!1),t.complete())})}shouldChangeDefaultPassword(){return new s.Observable(e=>{!1===this.userService.getUser("changed")?this.dwChangePasswordInfoService.shouldChanedPassword().subscribe(t=>{e.next(!0),e.complete()}):(e.next(!1),e.complete())})}}return e.\u0275fac=function(t){return new(t||e)(n.\u0275\u0275inject(T),n.\u0275\u0275inject(l.DwUserService),n.\u0275\u0275inject(h.DwAuthService),n.\u0275\u0275inject(u.DwSystemConfigService),n.\u0275\u0275inject(l.DwTenantService),n.\u0275\u0275inject(S),n.\u0275\u0275inject(w.DwChangePasswordInfoService))},e.\u0275prov=n.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),j=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=n.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=n.\u0275\u0275defineInjector({providers:[{provide:h.DwAuthService,useClass:m},{provide:l.DwTenantService,useClass:y},{provide:l.DwUserService,useClass:b},T,D,{provide:u.DW_SSO_LOGIN,useClass:D,multi:!0}],imports:[[v.CommonModule],p.DwHttpModule]}),e})()}}]);