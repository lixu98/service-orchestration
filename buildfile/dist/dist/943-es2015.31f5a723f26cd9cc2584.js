"use strict";(self.webpackChunkassc_crs=self.webpackChunkassc_crs||[]).push([[943],{28800:function(e,r,t){t.r(r),t.d(r,{ServiceWorkerModule:function(){return v},SwPush:function(){return u},SwRegistrationOptions:function(){return l},SwUpdate:function(){return p},"\u0275angular_packages_service_worker_service_worker_a":function(){return c},"\u0275angular_packages_service_worker_service_worker_b":function(){return h},"\u0275angular_packages_service_worker_service_worker_c":function(){return g},"\u0275angular_packages_service_worker_service_worker_d":function(){return d}});var s=t(55245),i=t(42746),n=t(71049),o=t(47372);const a="Service workers are disabled or not supported by this browser";class c{constructor(e){if(this.serviceWorker=e,e){const r=(0,n.fromEvent)(e,"controllerchange").pipe((0,o.map)(()=>e.controller)),t=(0,n.defer)(()=>(0,n.of)(e.controller)),s=(0,n.concat)(t,r);this.worker=s.pipe((0,o.filter)(e=>!!e)),this.registration=this.worker.pipe((0,o.switchMap)(()=>e.getRegistration()));const i=(0,n.fromEvent)(e,"message").pipe((0,o.map)(e=>e.data)).pipe((0,o.filter)(e=>e&&e.type)).pipe((0,o.publish)());i.connect(),this.events=i}else this.worker=this.events=this.registration=(a,(0,n.defer)(()=>(0,n.throwError)(new Error("Service workers are disabled or not supported by this browser"))))}postMessage(e,r){return this.worker.pipe((0,o.take)(1),(0,o.tap)(t=>{t.postMessage(Object.assign({action:e},r))})).toPromise().then(()=>{})}postMessageWithStatus(e,r,t){const s=this.waitForStatus(t),i=this.postMessage(e,r);return Promise.all([s,i]).then(()=>{})}generateNonce(){return Math.round(1e7*Math.random())}eventsOfType(e){return this.events.pipe((0,o.filter)(r=>r.type===e))}nextEventOfType(e){return this.eventsOfType(e).pipe((0,o.take)(1))}waitForStatus(e){return this.eventsOfType("STATUS").pipe((0,o.filter)(r=>r.nonce===e),(0,o.take)(1),(0,o.map)(e=>{if(!e.status)throw new Error(e.error)})).toPromise()}get isEnabled(){return!!this.serviceWorker}}let u=(()=>{class e{constructor(e){if(this.sw=e,this.subscriptionChanges=new n.Subject,!e.isEnabled)return this.messages=n.NEVER,this.notificationClicks=n.NEVER,void(this.subscription=n.NEVER);this.messages=this.sw.eventsOfType("PUSH").pipe((0,o.map)(e=>e.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe((0,o.map)(e=>e.data)),this.pushManager=this.sw.registration.pipe((0,o.map)(e=>e.pushManager));const r=this.pushManager.pipe((0,o.switchMap)(e=>e.getSubscription()));this.subscription=(0,n.merge)(r,this.subscriptionChanges)}get isEnabled(){return this.sw.isEnabled}requestSubscription(e){if(!this.sw.isEnabled)return Promise.reject(new Error(a));const r={userVisibleOnly:!0};let t=this.decodeBase64(e.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),s=new Uint8Array(new ArrayBuffer(t.length));for(let i=0;i<t.length;i++)s[i]=t.charCodeAt(i);return r.applicationServerKey=s,this.pushManager.pipe((0,o.switchMap)(e=>e.subscribe(r)),(0,o.take)(1)).toPromise().then(e=>(this.subscriptionChanges.next(e),e))}unsubscribe(){return this.sw.isEnabled?this.subscription.pipe((0,o.take)(1),(0,o.switchMap)(e=>{if(null===e)throw new Error("Not subscribed to push notifications.");return e.unsubscribe().then(e=>{if(!e)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})})).toPromise():Promise.reject(new Error(a))}decodeBase64(e){return atob(e)}}return e.\u0275fac=function(r){return new(r||e)(i.\u0275\u0275inject(c))},e.\u0275prov=i.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})(),p=(()=>{class e{constructor(e){if(this.sw=e,!e.isEnabled)return this.available=n.NEVER,this.activated=n.NEVER,void(this.unrecoverable=n.NEVER);this.available=this.sw.eventsOfType("UPDATE_AVAILABLE"),this.activated=this.sw.eventsOfType("UPDATE_ACTIVATED"),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}get isEnabled(){return this.sw.isEnabled}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(a));const e=this.sw.generateNonce();return this.sw.postMessageWithStatus("CHECK_FOR_UPDATES",{statusNonce:e},e)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(a));const e=this.sw.generateNonce();return this.sw.postMessageWithStatus("ACTIVATE_UPDATE",{statusNonce:e},e)}}return e.\u0275fac=function(r){return new(r||e)(i.\u0275\u0275inject(c))},e.\u0275prov=i.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();class l{}const h=new i.InjectionToken("NGSW_REGISTER_SCRIPT");function g(e,r,t,a){return()=>{if(!(0,s.isPlatformBrowser)(a)||!("serviceWorker"in navigator)||!1===t.enabled)return;let c;if(navigator.serviceWorker.addEventListener("controllerchange",()=>{null!==navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"INITIALIZE"})}),"function"==typeof t.registrationStrategy)c=t.registrationStrategy();else{const[r,...s]=(t.registrationStrategy||"registerWhenStable:30000").split(":");switch(r){case"registerImmediately":c=(0,n.of)(null);break;case"registerWithDelay":c=f(+s[0]||0);break;case"registerWhenStable":c=s[0]?(0,n.merge)(w(e),f(+s[0])):w(e);break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${t.registrationStrategy}`)}}e.get(i.NgZone).runOutsideAngular(()=>c.pipe((0,o.take)(1)).subscribe(()=>navigator.serviceWorker.register(r,{scope:t.scope}).catch(e=>console.error("Service worker registration failed with:",e))))}}function f(e){return(0,n.of)(null).pipe((0,o.delay)(e))}function w(e){return e.get(i.ApplicationRef).isStable.pipe((0,o.filter)(e=>e))}function d(e,r){return new c((0,s.isPlatformBrowser)(r)&&!1!==e.enabled?navigator.serviceWorker:void 0)}let v=(()=>{class e{static register(r,t={}){return{ngModule:e,providers:[{provide:h,useValue:r},{provide:l,useValue:t},{provide:c,useFactory:d,deps:[l,i.PLATFORM_ID]},{provide:i.APP_INITIALIZER,useFactory:g,deps:[i.Injector,h,l,i.PLATFORM_ID],multi:!0}]}}}return e.\u0275fac=function(r){return new(r||e)},e.\u0275mod=i.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=i.\u0275\u0275defineInjector({providers:[u,p]}),e})()}}]);